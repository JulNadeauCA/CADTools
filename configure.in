# Public domain
# ex:syn=bsdbuild
#
# cadtools configure script source.
#
# This is a BSDBuild configure source. The configure script is generated by the
# mkconfigure(1) utility of BSDBuild (http://bsdbuild.hypertriton.com/).
#

package("cadtools")
version("1.0-beta")
release("Face of the Goat")

register_section("Options specific to cadtools:")
register("--enable-static",	"Produce a static binary [default: no]")
register("--enable-warnings",	"Enable compiler warnings [default: no]")
register("--enable-debug",	"Enable debugging code [default: no]")

c_define(_CADTOOLS_INTERNAL)
c_define(_USE_AGAR_STD)
c_define(_USE_AGAR_QUEUE)
c_define(_USE_AGAR_MATH)
c_no_secure_warnings()

hdefine(CADTOOLS_VERSION, "$VERSION")

require(cc)
require(agar, 1.6.0)
require(agar-math, 1.6.0)
require(agar-dev, 1.6.0)
require(agar-sg, 1.6.0)
require(agar-sk, 1.6.0)
require(pthreads)
check(getopt)

if [ "${enable_warnings}" = "yes" ]; then
	c_option(-Wall)
	c_option(-Werror)
	c_option(-Wmissing-prototypes)
	c_option(-Wno-switch)
	c_option(-Wno-nullability-completeness)
	c_option(-Wno-deprecated-declarations)
fi
if [ "${enable_debug}" = "yes" ]; then
	c_define(CAD_DEBUG)
	hdefine(CAD_DEBUG, "yes")
else
	hundef(CAD_DEBUG)
fi
if [ "${enable_static}" = "yes" ]; then
	mdefine(LDFLAGS, "-static")
fi

# Enable NLS if requested explicitely.
if [ "${enable_nls}" = "yes" ]; then
	check(gettext)
	if [ "${HAVE_GETTEXT}" != "yes" ]; then
		echo "*"
		echo "* --enable-nls was given but gettext was not found. Try"
		echo "* running configure again without this option."
		echo "*"
		exit 1
	fi
fi

c_incprep($BLD/include/cadtools)
c_incdir($BLD/include)
c_incdir_config($BLD/include/cadtools/config)

echo "*"
echo "* Configuration successful."
echo "* Use \"make depend all install\" to build and install cadtools."
echo "*"
